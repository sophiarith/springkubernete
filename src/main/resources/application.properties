
#spring.datasource.url=jdbc:postgresql://localhost:5432/10th-kshrd-registration
#NOTE:jdbc:postgresql://34.126.159.235:5432/10th-kshrd-registration
spring.datasource.url=jdbc:postgresql://localhost:5432/register
#spring.datasource.url=jdbc:postgresql://34.126.159.235:5432/register
spring.datasource.username=postgres
spring.datasource.password=123

jwt.secret=secret

#Return link for image upload
#image.url=https://spring-mybatis-demo.herokuapp.com/images/
image.url=http://localhost:8080/images/
#image.url=http://34.126.159.235:8181/images/

#mail-server with gmail or we can use maildev to create our own mail server
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=leangsengk90@gmail.com
#Go to Google account => Security => App Password and Generate new one
spring.mail.password=phyfjxiexbjnzbph
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#swagger-config
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# Multipart Data
spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB

#Base link for verify by token REACTJS
base.token.url=http://localhost:3000/auth?token=
#base.token.url=http://34.126.159.235:8282/auth?token=

file.upload.server.path=/images/
#file.upload.client.path=src/main/resources/images/
file.upload.client.path=/images/**
#file.upload.full.url=http://34.126.159.235:8181/images/
file.upload.full.url=http://localhost:8080/images/

